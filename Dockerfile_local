# syntax=docker/dockerfile:1.4

###################
### Build image ###
###################

FROM node:18 as build

# Install build dependencies for underlying OS
RUN apt-get update && apt-get install -y g++ build-essential

RUN npm install -g npm@latest

# Print Node.js & npm versions
RUN node --version
RUN npm --version

# Install the dependencies
WORKDIR /usr/src/app

COPY package*.json ./
RUN npm install --no-audit

COPY --link .husky ./.husky
COPY --link pages ./pages
COPY --link public ./public
COPY --link src ./src
COPY --link types ./types
COPY --link next.config.js ./
COPY --link jsconfig.json ./
COPY --link tsconfig.json ./

# Build the project
RUN NEXT_PUBLIC_ENV=development npm run build

#####################
### Runtime image ###
#####################

FROM node:18-slim

# Update/install packages
RUN rm -f /etc/apt/apt.conf.d/docker-clean
RUN --mount=type=cache,target=/var/cache/apt \
	apt-get update && apt-get install -yqq --no-install-recommends \
    git curl procps htop net-tools dnsutils dumb-init && rm -rf /var/lib/apt/lists/*

RUN npm install -g npm@latest

# Print Node.js & npm versions
RUN node --version
RUN npm --version

# Copy the required files from the build step
WORKDIR /usr/src/app

COPY --from=build --link /usr/src/app/.husky ./.husky
COPY --from=build --link /usr/src/app/pages ./pages
COPY --from=build --link /usr/src/app/public ./public
COPY --from=build --link /usr/src/app/src ./src
COPY --from=build --link /usr/src/app/types ./types
COPY --from=build --link /usr/src/app/next.config.js ./

COPY --from=build --link /usr/src/app/package*.json ./
COPY --from=build --link /usr/src/app/.next ./.next
COPY --from=build --link /usr/src/app/node_modules ./node_modules

# Enable APM Insight Node.js Agent
RUN mkdir -p /usr/src/app/apminsightdata && chown -R node:node /usr/src/app/apminsightdata

# Enable logging
RUN mkdir -p /var/log/nodejs && touch /var/log/nodejs/nodejs.log && chown -R node:node /var/log/nodejs

# # Harden Image
# COPY ./harden.sh .
# RUN chmod +x harden.sh && \
#     sh harden.sh && \
#     rm -f harden.sh

ENTRYPOINT ["/usr/bin/dumb-init", "--"]
CMD ["/bin/bash", "-c", "exec npm run start-web >> /var/log/nodejs/nodejs.log 2>&1"]

# Force container to run as a non-root user
USER node
